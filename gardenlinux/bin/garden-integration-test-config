#!/bin/bash
set -Eeuo pipefail

# helper script for the integration tests called in build.sh
# create a config directory and create the configuration for the integration test chroot or kvm
# 
# NOTE: The args for this script are positional!!!
#
# usage:        garden-integration-test-config <test> <prefix> <arch> <name> <outputDir> <thisDir>
# test:         name of the test to create the configuration for, possible values are chroot or kvm
# prefix:       name of the image/archive before the file suffix (default: kvm_dev-amd64-dev-local)
# features:     list of enabled features (default: base)
# outputDir:    directory where the outcome of the build is stored (default: .build)
# arch:         architecture of the build target, defaults the arch of the image/archive to test

if [[ ! "$1" == "chroot" ]] && [[ ! "$1" == "kvm" ]]; then
    echo "The first argument must be 'chroot' or 'kvm'."
    exit 1
fi

# define more or less sane defaults
workDir="$(dirname "$(readlink -f "$BASH_SOURCE")")"
features="base"
outputDir=".build"
prefix="kvm_dev-amd64-dev-local"
arch="amd64"

# use positional arguments if given else use the defaults
test=$1
prefix=${2:-$prefix}
features=($(echo ${3:-features} | tr "," "\n"))
outputDir=${4:-$outputDir}
arch=${5:-$arch}

# create directory for the test configs
configDir=$(mktemp -d)

# Pytest parameters are documented here:
# https://github.com/gardenlinux/gardenlinux/blob/main/tests/README.md

# write config for the chroot integration test
if [[ "${test}" == "chroot" ]]; then
    cat > ${configDir}/config.yaml << EOF
chroot:
    image: /gardenlinux/${outputDir##*/}/${prefix}.tar.xz
    ip: 127.0.0.1
    port: 2222
    features: $(echo; for str in "${features[@]}"; do echo "      - \"$str\"";done)
    ssh:
        ssh_key_filepath: /tmp/ssh_priv_key
        user: root
EOF
fi

# write config for the kvm integration test
if [[ "${test}" == "kvm" ]]; then
    cat > ${configDir}/config.yaml << EOF
kvm:
    image: /gardenlinux/${outputDir##*/}/${prefix}.raw
    port: 2223
    features: $(echo; for str in "${features[@]}"; do echo "      - \"$str\"";done)
    arch: ${arch}
    ssh:
        ssh_key_generate: true
        ssh_key_filepath: /tmp/ssh_priv_key
        user: root
EOF
fi

echo ${configDir}
