#!/usr/bin/env bash

set -euxo pipefail

REMOTE_URL=$([ -f /builder/features/ostreeRepo/REMOTE_URL ] && cat /builder/features/ostreeRepo/REMOTE_URL || echo http://ostree.gardenlinux.io)
OS_NAME=$([ -f /builder/features/ostreeRepo/OS_NAME ] && cat /builder/features/ostreeRepo/OS_NAME || echo debian)
REMOTE_NAME=$([ -f /builder/features/ostreeRepo/REMOTE_NAME ] && cat /builder/features/ostreeRepo/REMOTE_NAME || echo debian)
REMOTE_ARCHIVE_NAME=ostree-${OS_NAME}-repo-${BUILDER_ARCH}.tar.gz
LOCAL_ARCHIVE_PATH=/builder/features/ostreeRepo/$REMOTE_ARCHIVE_NAME
REMOTE_REPO_PATH=${OS_NAME}-repo-${BUILDER_ARCH}
LOCAL_ARCHIVE_PATH=/builder/features/ostreeRepo/$REMOTE_ARCHIVE_NAME
echo Build Configuration:
echo REMOTE_URL:           $REMOTE_URL
echo REMOTE_REPO_PATH:     $REMOTE_REPO_PATH
echo OS_NAME:              $OS_NAME

export PATH="/builder/image.d:$PATH"

rootfs_work="$(mktemp -d)"
mount -t tmpfs tmpfs "$rootfs_work"

MYROOT="$(mktemp -d)"
mount -t tmpfs tmpfs "$MYROOT"
mkdir -p "$MYROOT"/sysroot
OSTREE_SYSROOT="$MYROOT/sysroot"
OSTREE_REPO=$OSTREE_SYSROOT/ostree/repo
OSTREE_REF="${OS_NAME}/testing/$BUILDER_ARCH"

LOCAL_ARCHIVE_PATH=/builder/features/ostreeRepo/$REMOTE_ARCHIVE_NAME

rootfs="$1"
output="$2"

tar xf "$rootfs" -C "$rootfs_work"

mv "$rootfs_work"/etc "$rootfs_work"/usr/etc

mkdir -p $OSTREE_REPO

download="$(mktemp -d)"
pushd $download

if [ -f $LOCAL_ARCHIVE_PATH ]; then
   echo "Using local file from $LOCAL_ARCHIVE_PATH"
   tar xf $LOCAL_ARCHIVE_PATH --directory $OSTREE_REPO
elif [ $(curl -sSL --remote-name -w "%{http_code}" $REMOTE_URL/$REMOTE_ARCHIVE_NAME) -eq 200 ]; then
   echo "Using remote file from $REMOTE_URL/$REMOTE_ARCHIVE_NAME"
   tar xf $REMOTE_ARCHIVE_NAME --directory $OSTREE_REPO
else
    echo "Coud use local file from $LOCAL_ARCHIVE_PATH or remote file from $REMOTE_URL/$REMOTE_ARCHIVE_NAME, building new repo"
    ostree init --mode=archive --repo=$OSTREE_REPO
    ostree admin init-fs --modern $OSTREE_SYSROOT
    ostree admin os-init --sysroot=$OSTREE_SYSROOT ${OS_NAME}
    ostree config --repo=$OSTREE_REPO set sysroot.bootloader none
fi

popd
rm -rf $download

ostree remote --repo=$OSTREE_REPO delete --if-exists ${REMOTE_NAME}
ostree remote --repo=$OSTREE_REPO add --no-gpg-verify --no-sign-verify ${REMOTE_NAME} $REMOTE_URL/$REMOTE_REPO_PATH $OSTREE_REF

ostree commit --repo=$OSTREE_REPO --branch $OSTREE_REF --skip-if-unchanged -s "Debian $REMOTE_REPO_PATH $(date --utc +%Y-%m-%dT%H:%M%Z)" "$rootfs_work"

ostree log --repo=$OSTREE_REPO $OSTREE_REF

ostree summary --update --repo=$OSTREE_REPO

ostree summary --view --repo=$OSTREE_REPO

tar --directory $OSTREE_REPO --create --mtime="@$BUILDER_TIMESTAMP" --sort name --numeric-owner --pax-option=exthdr.name=%d/PaxHeaders/%f,delete=atime,delete=ctime . | gzip > "$output"
